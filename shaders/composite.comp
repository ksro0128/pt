#version 450
layout(local_size_x = 16, local_size_y = 16) in;

// layout(binding = 0) uniform sampler2D uHDRImage;
layout(binding = 0, rgba32f) readonly uniform image2D uHDRImage;
layout(binding = 3, rgba32f) readonly uniform image2D uBloomImage;
layout(binding = 4, rgba32f) writeonly uniform image2D uOutputImage;

layout(push_constant) uniform PC_Composite {
    vec2 screenSize;
    float bloomStrength;
} pc;

void main() {
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    if (uv.x >= int(pc.screenSize.x) || uv.y >= int(pc.screenSize.y))
        return;

    vec2 texCoord = vec2(uv) / pc.screenSize;
    // vec3 hdr   = texture(uHDRImage,   texCoord).rgb;
    vec3 hdr   = imageLoad(uHDRImage, uv).rgb;
    vec3 bloom = imageLoad(uBloomImage, uv).rgb;

    vec3 finalColor = hdr + bloom * pc.bloomStrength;
    // imageStore(uOutputImage, uv, vec4(finalColor, 1.0));
    imageStore(uOutputImage, uv, vec4(hdr, 1.0));

}
