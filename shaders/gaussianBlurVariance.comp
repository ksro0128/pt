#version 450
layout(local_size_x = 8, local_size_y = 8) in;

layout(set = 0, binding = 0, r32f) uniform readonly image2D varianceImage;
layout(set = 0, binding = 1, r32f) uniform writeonly image2D blurredVarianceImage;

const float kernel[3] = float[](0.25, 0.5, 0.25);

void main() {
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 imageSize = imageSize(varianceImage);

    float result = 0.0;
    float weightSum = 0.0;

    for (int dy = -1; dy <= 1; ++dy) {
        for (int dx = -1; dx <= 1; ++dx) {
            ivec2 offset = ivec2(dx, dy);
            ivec2 sampleCoord = clamp(coord + offset, ivec2(0), imageSize - 1);

            float w = kernel[abs(dx)] * kernel[abs(dy)];
            float v = imageLoad(varianceImage, sampleCoord).r;

            result += v * w;
            weightSum += w;
        }
    }

    result = (weightSum > 0.0) ? (result / weightSum) : 0.0;
    imageStore(blurredVarianceImage, coord, vec4(result));
}
