#version 450
layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0) uniform sampler2D uHDRImage;
layout(binding = 1, rgba32f) writeonly uniform image2D uBrightImage;

layout(push_constant) uniform PC_Threshold {
    vec2 screenSize;
    float threshold;
} pc;

void main() {
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    if (uv.x >= int(pc.screenSize.x) || uv.y >= int(pc.screenSize.y))
        return;

    vec3 hdr = texture(uHDRImage, vec2(uv) / pc.screenSize).rgb;

    vec3 bright = hdr.r > pc.threshold ? hdr : vec3(0.0);

    imageStore(uBrightImage, uv, vec4(bright, 1.0));
}
